% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_management.R
\name{grepl_text_files}
\alias{grepl_text_files}
\title{Find Files with Text that Matches a Pattern}
\usage{
grepl_text_files(
  path = ".",
  file_pattern = NULL,
  all.files = FALSE,
  recursive = FALSE,
  text_pattern,
  ignore.case = TRUE,
  perl = FALSE,
  fixed = FALSE,
  useBytes = FALSE
)
}
\arguments{
\item{path}{a character vector of full path names; the default
    corresponds to the working directory, \code{\link[base]{getwd}()}.  Tilde
    expansion (see \code{\link[base]{path.expand}}) is performed.  Missing
    values will be ignored.  Elements with a marked encoding will
    be converted to the native encoding.}

\item{all.files}{a logical value.  If \code{FALSE}, only the
    names of visible files are returned.  If \code{TRUE},
    all file names will be returned.}

\item{recursive}{logical.  Should the listing recurse into directories?}

\item{ignore.case}{if \code{FALSE}, the pattern matching is \emph{case
      sensitive} and if \code{TRUE}, case is ignored during matching.}

\item{perl}{logical.  Should Perl-compatible regexps be used?}

\item{fixed}{logical.  If \code{TRUE}, \code{pattern} is a string to be
    matched as is.  Overrides all conflicting arguments.}

\item{useBytes}{logical.  If \code{TRUE} the matching is done
    byte-by-byte rather than character-by-character.  See
    \sQuote{Details}.}
}
\description{
Find files in a path that contains text that matches a pattern. The files in the given path can also be optionally subset based on a pattern of its own before the files are read into the caller environment, useful feature for cases where the path contains a mix of different file types and only text files need to be read.
}
